plugins {
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
    id 'org.spongepowered.mixin' version '0.7.+'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
}

minecraft {
    mappings channel: mappings_channel, version: "${mappings_mc_version}-${parchment_version}-${minecraft_version}"
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')
            ideaModule "${rootProject.name}.${project.name}.main"
            taskName 'Client'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            arg "-mixin.config="+mod_id+".mixins.json"

            mods {
                modClientRun {
                    source sourceSets.main
                    source project(":Common").sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            ideaModule "${rootProject.name}.${project.name}.main"
            taskName 'Server'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            arg "-mixin.config="+mod_id+".mixins.json"

            mods {
                modServerRun {
                    source sourceSets.main
                    source project(":Common").sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            ideaModule "${rootProject.name}.${project.name}.main"
            args '--mod', mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            taskName 'Data'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            arg "-mixin.config="+mod_id+".mixins.json"

            mods {
                modDataRun {
                    source sourceSets.main
                    source project(":Common").sourceSets.main
                }
            }
        }
    }
}

mixin {
    add sourceSets.main, "${mod_id}.refmap.json"
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        maven(MavenPublication) {
            artifactId = archivesBaseName
            artifact jar
            artifact sourcesJar
        }
    }
}

curseforge {
    apiKey = System.getenv("CURSEFORGE_TOKEN")

    project {
        id = curseforge_id
        changelog = 'https://github.com/Tslat/TslatEffectsLib/commits/1.20.4'
        releaseType = 'release'
        addGameVersion minecraft_version

        mainArtifact(jar) {
            it.displayName = "${project.mod_name} Forge ${project.minecraft_version}-${project.version}"
        }
    }
}

modrinth {
    token = System.getenv("modrinthKey")
    projectId = mod_id
    versionNumber = project.version
    versionType = "release"
    uploadFile = jar
    gameVersions = ["${project.minecraft_version}"]
    loaders = ["forge"]
}